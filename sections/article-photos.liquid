{{ 'section-blog-post.css' | asset_url | stylesheet_tag }}

<article class="container mx-auto flex flex-col justify-center items-center px-8 md:px-0">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when '@app' -%}
        <div class="page-width page-width--narrow">
          {% render block %}
        </div>

      {%- when 'title' -%}
      {% comment %} <header class="flex flex-col justify-center items-center space-y-2 mt-10" {{ block.shopify_attributes }}>
                                  <h1 class="text-[50px] tracking-[-3px] mt-5 md:mt-[50px] text-center">
                                    {{ article.title | escape }}
                                  </h1>
                                  {%- if block.settings.blog_show_date -%}
                                    <span class="text-center opacity-70">
                                      {{- article.published_at | time_tag: format: 'date' -}}
                                    </span>
                                  {%- endif -%}
                                  {%- if block.settings.blog_show_author -%}
        
                                      <span class="capitalize">por: {{ article.metafields.custom.autor }}</span>
         
                                  {%- endif -%}
                          </header> {% endcomment %}

      {%- when 'featured_image' -%}
        <div class="w-full max-w-4xl mx-auto">
          <div class="w-full h-full min-h-[150px] rounded-lg p-8 flex flex-col justify-center items-center" style="background-color: {{ article.metafields.custom.background_color.value | default: '#2A2A2A' }}">
            <div class="space-y-6 text-center">
              <h1 class="porter-sans text-black text-6xl md:text-8xl font-normal leading-tight tracking-tight">
                {{ article.title | truncate: 50 | escape }}
              </h1>
              <div class="flex items-center justify-center space-x-3">
                <span class="opacity-70 text-3xl md:text-4xl border border-black text-black px-8 pt-2 rounded-full">{{ article.published_at | date: '%Y' }}</span>
              </div>
            </div>
          </div>

          <div class="flex justify-between items-center mt-2">
            <h2 class="text-white text-xl m-0 text-right mr-1">por: {{ article.metafields.custom.autor }}</h2>
            <p class="text-white text-xl m-0 text-left">
              <span class="text-white">cancion por:</span>
              {{ article.metafields.custom.song_credits }}
            </p>
          </div>
        </div>


      {%- when 'content' -%}

        <div class="text-[20px] md:max-w-[70%] leading-[35px] font-[300]" {{ block.shopify_attributes }}>
          {{ article.content }}
        </div>

      {%- when 'share' -%}
        <div class="my-10">
          {% assign share_url = request.origin | append: article.url %}
          {% render 'share-button'
            , block: block
            , share_link: share_url %}
        </div>
    {%- endcase -%}
  {%- endfor -%}

  <div class="article-template__back element-margin-top center{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <a href="{{ blog.url }}" class="article-template__link link animate-arrow">
      <span class="icon-wrap">
        <span class="svg-wrapper">
          {{- 'icon-arrow.svg' | inline_asset_content -}}
        </span>
      </span>
      {{ 'blogs.article.back_to_blog' | t: title: blog.title | escape }}
    </a>
  </div>
  {%- if blog.comments_enabled? -%}
    <div class="article-template__comment-wrapper background-secondary">
      <div id="comments" class="page-width page-width--narrow{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        {%- if article.comments_count > 0 -%}
          {%- assign anchorId = '#Comments-' | append: article.id -%}

          <h2 id="Comments-{{ article.id }}" tabindex="-1">
            {{ 'blogs.article.comments' | t: count: article.comments_count }}
          </h2>
          {% paginate article.comments by 5 %}
            <div class="article-template__comments">
              {%- if comment.status == 'pending' and comment.content -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span>
                  </footer>
                </article>
              {%- endif -%}

              {%- for comment in article.comments -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span>
                    <span class="caption-with-letter-spacing">
                      {{- comment.created_at | time_tag: format: 'date' -}}
                    </span>
                  </footer>
                </article>
              {%- endfor -%}
              {% render 'pagination'
                , paginate: paginate
                , anchor: anchorId %}
            </div>
          {% endpaginate %}
        {%- endif -%}
        {% form 'new_comment'
          , article %}
          {%- liquid
            assign post_message = 'blogs.article.success'
            if blog.moderated? and comment.status == 'unapproved'
              assign post_message = 'blogs.article.success_moderated'
            endif
          -%}
          <h2>{{ 'blogs.article.comment_form_title' | t }}</h2>
          {%- if form.errors -%}
            <div class="form__message" role="alert">
              <h3
                class="form-status caption-large text-body"
                tabindex="-1"
                autofocus>
                <span class="svg-wrapper">
                  {{- 'icon-error.svg' | inline_asset_content -}}
                </span>
                {{ 'templates.contact.form.error_heading' | t }}
              </h3>
            </div>
            <ul class="form-status-list caption-large">
              {%- for field in form.errors -%}
                <li>
                  <a href="#CommentForm-{{ field }}" class="link">
                    {%- if form.errors.translated_fields[field] contains 'author' -%}
                      {{ 'blogs.article.name' | t }}
                    {%- elsif form.errors.translated_fields[field] contains 'body' -%}
                      {{ 'blogs.article.message' | t }}
                    {%- else -%}
                      {{ form.errors.translated_fields[field] }}
                    {%- endif -%}
                    {{ form.errors.messages[field] }}
                  </a>
                </li>
              {%- endfor -%}
            </ul>
          {%- elsif form.posted_successfully? -%}
            <div class="form-status-list form__message" role="status">
              <h3
                class="form-status"
                tabindex="-1"
                autofocus>
                <span class="svg-wrapper">
                  {{- 'icon-success.svg' | inline_asset_content -}}
                </span>
                {{ post_message | t }}
              </h3>
            </div>
          {%- endif -%}

          <div
            {% if blog.moderated? == false %}
            class="article-template__comments-fields"
            {% endif %}>
            <div class="article-template__comment-fields">
              <div class="field field--with-error">
                <input
                  type="text"
                  name="comment[author]"
                  id="CommentForm-author"
                  class="field__input"
                  autocomplete="name"
                  value="{{ form.author }}"
                  aria-required="true"
                  required
                  {% if form.errors contains 'author' %}
                  aria-invalid="true"
                  aria-describedby="CommentForm-author-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.name' | t }}">
                <label class="field__label" for="CommentForm-author">
                  {{- 'blogs.article.name' | t }}
                  <span aria-hidden="true">*</span>
                </label>
                {%- if form.errors contains 'author' -%}
                  <small id="CommentForm-author-error">
                    <span class="form__message">
                      <span class="svg-wrapper">
                        {{- 'icon-error.svg' | inline_asset_content -}}
                      </span>
                      {{- 'blogs.article.name' | t }}
                      {{ form.errors.messages.author }}.</span>
                  </small>
                {%- endif -%}
              </div>
              <div class="field field--with-error">
                <input
                  type="email"
                  name="comment[email]"
                  id="CommentForm-email"
                  autocomplete="email"
                  class="field__input"
                  value="{{ form.email }}"
                  autocorrect="off"
                  autocapitalize="off"
                  aria-required="true"
                  required
                  {% if form.errors contains 'email' %}
                  aria-invalid="true"
                  aria-describedby="CommentForm-email-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.email' | t }}">
                <label class="field__label" for="CommentForm-email">
                  {{- 'blogs.article.email' | t }}
                  <span aria-hidden="true">*</span>
                </label>
                {%- if form.errors contains 'email' -%}
                  <small id="CommentForm-email-error">
                    <span class="form__message">
                      <span class="svg-wrapper">
                        {{- 'icon-error.svg' | inline_asset_content -}}
                      </span>
                      {{- 'blogs.article.email' | t }}
                      {{ form.errors.messages.email }}.</span>
                  </small>
                {%- endif -%}
              </div>
            </div>
            <div class="field field--with-error">
              <textarea
                rows="5"
                name="comment[body]"
                id="CommentForm-body"
                class="text-area field__input"
                aria-required="true"
                required
                {% if form.errors contains 'body' %}
                aria-invalid="true"
                aria-describedby="CommentForm-body-error"
                {% endif %}
                placeholder="{{ 'blogs.article.message' | t }}">{{ form.body }}</textarea>
              <label class="form__label field__label" for="CommentForm-body">
                {{- 'blogs.article.message' | t }}
                <span aria-hidden="true">*</span>
              </label>
            </div>
            {%- if form.errors contains 'body' -%}
              <small id="CommentForm-body-error">
                <span class="form__message">
                  <span class="svg-wrapper">
                    {{- 'icon-error.svg' | inline_asset_content -}}
                  </span>
                  {{- 'blogs.article.message' | t }}
                  {{ form.errors.messages.body }}.</span>
              </small>
            {%- endif -%}
          </div>
          {%- if blog.moderated? -%}
            <p class="article-template__comment-warning caption">{{ 'blogs.article.moderated' | t }}</p>
          {%- endif -%}
          <input
            type="submit"
            class="button"
            value="{{ 'blogs.article.post' | t }}">
        {% endform %}
      </div>
    </div>
  {%- endif -%}
</article>

<!-- Music Player -->
{% comment %} {%- if article.metafields.custom.song_url.value -%} {% endcomment %}
<div id="music-player" class="fixed bottom-4 inset-x-7 z-50 bg-black/90 backdrop-blur-sm border-2 border-[{{ article.metafields.custom.background_color.value }}] rounded-xl p-4 min-w-[80%] shadow-2xl">

  <div class="flex justify-between gap-4">
    <!-- Play/Pause Button -->
    <button id="play-pause-btn" class="flex-shrink-0 w-14 h-14 bg-white rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors group">
      <!-- Play Icon -->
      <svg
        id="play-icon"
        class="w-12 h-12 text-black"
        fill="currentColor"
        viewBox="0 0 20 20">
        <path d="M8 5v10l8-5-8-5z" />
      </svg>
      <!-- Pause Icon (hidden by default) -->
      <svg
        id="pause-icon"
        class="w-12 h-12 text-black hidden"
        fill="currentColor"
        viewBox="0 0 20 20">
        <path d="M6 4h2v12H6V4zm6 0h2v12h-2V4z" />
      </svg>
    </button>

    <div class="w-full flex flex-col items-end justify-around">

      <!-- Song Info -->
      <div class="flex gap-3">
        <div class="font-medium text-2xl">
          {{ article.title | truncate: 30 }}
        </div>
        <div class="font-light text-2xl truncate">
          {{ article.metafields.custom.autor | default: 'Artista desconocido' }}
        </div>
      </div>

          <!-- Progress Bar -->
      <div class="w-full flex justify-center items-center gap-2">
        <div class="flex justify-between text-sm text-gray-400 mt-1">
          <span id="current-time">0:00</span>
        </div>

        <div class="w-full bg-gray-600 h-1 rounded-full overflow-hidden cursor-pointer" id="progress-container">
          <div id="progress-bar" class="bg-[{{ article.metafields.custom.background_color.value }}] h-full w-0 transition-all duration-100"></div>
        </div>
        <div class="flex justify-between text-sm text-gray-400 mt-1">
          <span id="total-time">0:00</span>
        </div>
      </div>

    </div>





    <!-- Hidden Audio Element -->
    <audio id="audio-player" preload="metadata">
      <source src="https://cdn.shopify.com/s/files/1/0700/8623/0213/files/sulky.mp3?v=1760165207" type="audio/mpeg">
      <source src="https://cdn.shopify.com/s/files/1/0700/8623/0213/files/sulky.mp3?v=1760165207" type="audio/wav">
      <source src="https://cdn.shopify.com/s/files/1/0700/8623/0213/files/sulky.mp3?v=1760165207" type="audio/ogg">
      Tu navegador no soporta el elemento de audio.
    </audio>
  </div>
<!-- Close Button -->
{% comment %} <button id="close-player-btn" class="flex-shrink-0 w-8 h-8 text-white/60 hover:text-white transition-colors">
                <svg
                  class="w-4 h-4"
                  fill="currentColor"
                  viewBox="0 0 20 20">
                  <path d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" />
                </svg>
          </button> {% endcomment %}
</div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
      const player = document.getElementById('music-player');
      const audio = document.getElementById('audio-player');
      const playPauseBtn = document.getElementById('play-pause-btn');
      const playIcon = document.getElementById('play-icon');
      const pauseIcon = document.getElementById('pause-icon');
      const closeBtn = document.getElementById('close-player-btn');
      const progressBar = document.getElementById('progress-bar');
      const progressContainer = document.getElementById('progress-container');
      const currentTimeSpan = document.getElementById('current-time');
      const totalTimeSpan = document.getElementById('total-time');

      let isPlaying = false;

      // Play/Pause functionality
      playPauseBtn.addEventListener('click', function() {
    if (isPlaying) {
      audio.pause();
    } else {
      audio.play().catch(function(error) {
        console.log('Error al reproducir:', error);
      });
    }
      });

      // Update play/pause button state
      audio.addEventListener('play', function() {
    isPlaying = true;
    playIcon.classList.add('hidden');
    pauseIcon.classList.remove('hidden');
      });

      audio.addEventListener('pause', function() {
    isPlaying = false;
    playIcon.classList.remove('hidden');
    pauseIcon.classList.add('hidden');
      });

      // Update progress bar and time
      audio.addEventListener('timeupdate', function() {
    if (audio.duration && !isNaN(audio.duration)) {
      const progress = (audio.currentTime / audio.duration) * 100;
      progressBar.style.width = progress + '%';
      
      currentTimeSpan.textContent = formatTime(audio.currentTime);
    }
      });

      // Set total time when metadata loads
      audio.addEventListener('loadedmetadata', function() {
    if (audio.duration && !isNaN(audio.duration)) {
      totalTimeSpan.textContent = formatTime(audio.duration);
    }
      });

      // Progress bar click to seek
      progressContainer.addEventListener('click', function(e) {
    if (audio.duration && !isNaN(audio.duration)) {
      const rect = this.getBoundingClientRect();
      const clickX = e.clientX - rect.left;
      const width = rect.width;
      const seekTime = (clickX / width) * audio.duration;
      audio.currentTime = seekTime;
    }
      });

      // Close player
      closeBtn.addEventListener('click', function() {
    audio.pause();
    player.style.display = 'none';
      });

      // Format time helper
      function formatTime(seconds) {
    if (isNaN(seconds) || seconds === 0) return '0:00';
    const mins = Math.floor(seconds / 60);
    const secs = Math.floor(seconds % 60);
    return mins + ':' + (secs < 10 ? '0' : '') + secs;
      }

      // Auto-reset when song ends
      audio.addEventListener('ended', function() {
    isPlaying = false;
    playIcon.classList.remove('hidden');
    pauseIcon.classList.add('hidden');
    progressBar.style.width = '0%';
    audio.currentTime = 0;
    currentTimeSpan.textContent = '0:00';
      });

      // Error handling
      audio.addEventListener('error', function(e) {
    console.log('Error de audio:', e);
    player.style.display = 'none';
      });
    });
</script>
{% comment %} {%- endif -%} {% endcomment %}

<script type="application/ld+json">
  {{ article | structured_data }}
</script>


{% schema %}
  {
    "name": "t:sections.main-article.name",
    "tag": "section",
    "class": "section",
    "blocks": [
      {
        "type": "@app"
      },
      {
        "type": "featured_image",
        "name": "t:sections.main-article.blocks.featured_image.name",
        "limit": 1,
        "settings": [
          {
            "type": "select",
            "id": "image_height",
            "options": [
              {
                "value": "adapt",
                "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__1.label"
              }, {
                "value": "small",
                "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__2.label"
              }, {
                "value": "medium",
                "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__3.label"
              }, {
                "value": "large",
                "label": "t:sections.main-article.blocks.featured_image.settings.image_height.options__4.label"
              }
            ],
            "default": "adapt",
            "label": "t:sections.main-article.blocks.featured_image.settings.image_height.label",
            "info": "t:sections.main-article.blocks.featured_image.settings.image_height.info"
          }
        ]
      },
      {
        "type": "title",
        "name": "t:sections.main-article.blocks.title.name",
        "limit": 1,
        "settings": [
          {
            "type": "checkbox",
            "id": "blog_show_date",
            "default": true,
            "label": "t:sections.main-article.blocks.title.settings.blog_show_date.label"
          }, {
            "type": "checkbox",
            "id": "blog_show_author",
            "default": false,
            "label": "t:sections.main-article.blocks.title.settings.blog_show_author.label"
          }
        ]
      },
      {
        "type": "content",
        "name": "t:sections.main-article.blocks.content.name",
        "limit": 1
      }, {
        "type": "share",
        "name": "t:sections.main-article.blocks.share.name",
        "limit": 2,
        "settings": [
          {
            "type": "text",
            "id": "share_label",
            "label": "t:sections.main-article.blocks.share.settings.text.label",
            "default": "t:sections.main-article.blocks.share.settings.text.default"
          }, {
            "type": "paragraph",
            "content": "t:sections.main-article.blocks.share.settings.featured_image_info.content"
          }, {
            "type": "paragraph",
            "content": "t:sections.main-article.blocks.share.settings.title_info.content"
          }
        ]
      }
    ]
  }
{% endschema %}